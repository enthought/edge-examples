name: Test Native Examples

on:
  pull_request:

jobs:
  test-examples:
    name: Test Examples
    runs-on: ubuntu-latest

    env:
      SHELL: /bin/bash
      INSTALLED_EDM_VERSION: "3.4.0"
      HATCHER_TOKEN: ${{ secrets.HATCHER_TOKEN }}

    strategy:
      matrix:
        example: [
          {
            component: edge-native-base,
            directory: .dev/edge-native-base,
            environment: edge-native-base
          },
          {
            component: edge-hello-world,
            directory: .dev/edge-hello-world,
            environment: edge-hello-world
          },
          {
            component: native-app-flask-example,
            directory: native-app-flask-example,
            environment: edge-native-app-flask
          },
          {
            component: dashboard-app-example,
            directory: dashboard-app-example,
            environment: edge-dashboard-demo
          },
          {
            component: edge-panel-example,
            directory: edge-panel-example,
            environment: edge-panel-example
          },
          {
            component: edge-streamlit-example,
            directory: edge-streamlit-example,
            environment: edge-streamlit-example
          },
        ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup NodeJS 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: |
            **/package-lock.json

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: |
            /tmp/.buildx-cache
          key:  ${{ runner.os }}-${{ matrix.examples.component }}-${{ hashFiles(matrix.examples.component) }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.examples.component }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true

      - name: Set up EDM
        uses: enthought/setup-edm-action@v2
        with:
          edm-version:  ${{ env.INSTALLED_EDM_VERSION }}

      - name: Bootstrap
        shell: bash
        run: |
          export PATH="$HOME/edm/bin:$PATH"        
          edm -c ./.github/data/edm.yml -t ${{ secrets.HATCHER_TOKEN }} install --version 3.8 -y click pyyaml
          edm -c ./.github/data/edm.yml -t ${{ secrets.HATCHER_TOKEN }} run pip install dirhash graphlib-backport
          npm install -g configurable-http-proxy

      - name: Build and test example 
        shell: bash
        env:
          CI_EDM_CONFIG: ${{ github.workspace }}/.github/data/edm.yml
          CI_EDM_TOKEN: ${{ secrets.HATCHER_TOKEN }}
        run: |
          export PATH="$HOME/edm/bin:$PATH"
          set -e
          cd ${{ matrix.example.directory }}
          edm run -- python bootstrap.py -c $CI_EDM_CONFIG -t $CI_EDM_TOKEN
          edm run -e ${{ matrix.example.environment }} -- python -m ci generate_bundle --edm-config $CI_EDM_CONFIG --edm-token $CI_EDM_TOKEN
          edm run -e ${{ matrix.example.environment }} -- python -m ci container build
          edm run -e ${{ matrix.example.environment }} -- python -m ci container test
          edm run -e ${{ matrix.example.environment }} -- python -m ci preflight test


  comment:
    needs: [test-examples]
    runs-on: ubuntu-latest

    steps:
      - name: Comment on PR
        uses: actions/github-script@v6
        if: github.ref_name != 'main'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Edge Examples build and pass tests'
            })
